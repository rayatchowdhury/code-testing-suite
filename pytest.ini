# pytest.ini - PyTest Configuration
[tool:pytest]
# Test discovery patterns
testpaths = tests
python_files = test_*.py *_test.py
python_classes = Test*
python_functions = test_*

# Add current directory and src to Python path for imports
pythonpath = . src

# Command line options
addopts = 
    --strict-markers
    --strict-config
    --verbose
    --tb=short
    --cov=src
    --cov-report=html:htmlcov
    --cov-report=xml:coverage.xml
    --cov-report=term-missing:skip-covered
    --cov-fail-under=70
    --junitxml=test-results.xml
    -p no:warnings
    --maxfail=5

# Configure Qt testing environment for headless GUI tests
qt_api = pyside6
qt_qpa_platform = offscreen

# Markers for test categorization
# Use: @pytest.mark.<marker_name>
markers =
    unit: Unit tests for isolated components (fast, no external dependencies)
    integration: Integration tests for multi-component workflows (requires real components)
    e2e: End-to-end tests for complete user scenarios (tests full application flow)
    gui: GUI tests requiring Qt event loop and widgets (uses pytest-qt)
    database: Tests requiring database operations (uses temp database)
    compilation: Tests involving actual compilation (requires compiler in PATH)
    slow: Tests that take >1 second to execute (skipped by default with -m "not slow")
    benchmark: Performance baseline tests (memory, speed, throughput)
    ai: Tests requiring AI/Gemini integration (may be skipped if API key not set)
    windows_only: Tests that only run on Windows platform
    linux_only: Tests that only run on Linux platform
    macos_only: Tests that only run on macOS platform
    requires_compiler: Tests requiring g++/javac/python in PATH
    requires_internet: Tests requiring internet connection
    flaky: Tests that are known to be flaky (require multiple runs for stability)

# Timeout configuration
timeout = 300
timeout_method = thread

# Filter warnings to reduce noise during testing
filterwarnings =
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    ignore:.*Qt.*:RuntimeWarning
    ignore:.*PySide.*:RuntimeWarning

# Minimum Python version required
minversion = 6.0

# Async testing configuration
asyncio_mode = auto

# Coverage configuration
[coverage:report]
precision = 2
skip_covered = False
show_missing = True
sort = Cover

[coverage:run]
source = src
omit = 
    */tests/*
    */__pycache__/*
    */venv/*
    */site-packages/*
    src/resources/*